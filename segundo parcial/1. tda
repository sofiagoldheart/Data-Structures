/*
TDA "Tipo Dato Abstracto"
Tipos primitivos: char, int, float.
Tipos compuestos: cadenas, arreglos, estructuras. 
Pila (Stack): es un TDA de tipo LIFO (Last Input First Output)

i4ds.gtihub.io/CargoBot.io/?state=3

Función:
Se necesita un arreglo de ENTIDADES -> (tipo primitivo, compuesto o TDA) para formar una pila; una pila puede tener elementos distintos pero deben pertenecer a un tipo común. Pueden existir pilas en pilas.
TOP es una variable int que representa la posición del último dato en pila.

FUNCIONALIDAD                       Una entidad es como una caja.
- Crear pila
- Apilar (Push)
- Extraer (Pop)
- Consultar -> vacía
            -> llena
            
Si no hay memoria para el arreglo dinámico no se puede crear una pila. 
            
Estructura:       
*/

#include <iostream>
using namespace std;

struct stack i{
    int sizestack;
    int top;
    int *arri;

Create_Stacki (stacki sti, int s){
    sti -> top = -1;
    sti -> new int [s];
    if (sti==NULL) {return flase;}
    
    return true;
    }
    
    int main(){
        stacki s1;
            if (!Create_Stacki(&s1,10)){
                cout << "Error" << endl;
                    exit (1);
            }
    }
}
